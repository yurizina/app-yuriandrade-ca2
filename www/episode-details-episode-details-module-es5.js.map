{"version":3,"sources":["src/app/pages/episode-details/episode-details.page.html","src/app/pages/episode-details/episode-details-routing.module.ts","src/app/pages/episode-details/episode-details.module.ts","src/app/pages/episode-details/episode-details.page.scss","src/app/pages/episode-details/episode-details.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/episodes\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t\\n        <ion-title>Episode Details</ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteEp()\\\" *ngIf=\\\"isFavourite\\\">\\n            <!-- the ngIF check if the statement is true or not-->\\n            <!-- We have two buttons, one when is favorite and one when is not-->\\n\\t\\t\\t\\t<ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"favouriteEp()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n\\t<ion-card *ngIf=\\\"episode\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h2>Title: <b>{{ episode.title }}</b> </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Season: {{ episode.season }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Released: {{ episode.air_date }} </h2>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n    <ion-card *ngIf=\\\"episode\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h3> Characters: {{ episode.characters }} </h3>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EpisodeDetailsPage } from './episode-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodeDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodeDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodeDetailsPageRoutingModule } from './episode-details-routing.module';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodeDetailsPageRoutingModule\n  ],\n  declarations: [EpisodeDetailsPage]\n})\nexport class EpisodeDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGUtZGV0YWlscy9lcGlzb2RlLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//Add the ActivatedRoute, where can be used further in our code to path/navigate \nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n\n@Component({\n  selector: 'app-episode-details',\n  templateUrl: './episode-details.page.html',\n  styleUrls: ['./episode-details.page.scss'],\n})\nexport class EpisodeDetailsPage implements OnInit {\n \n    episode: any;\n    //Similar to Character details page.ts \n    epId = null; \n    //First of all we set the character ID, then we can use the constructor\n    isFavourite = false;  \n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n\n    ngOnInit() {\n        //Here the function use the path from constructor to GET paraments pased in ID.\n        this.epId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        this.api.getEpisode(this.epId).subscribe(res => {\n             this.episode = res[0];\n             console.log(JSON.stringify(this.episode.episode_id));\n\n        });\n\n        this.favouriteService.isFav(this.epId).then(isFav => {\n            this.isFavourite = isFav;\n        });\n\n    }\n    favouriteEp() {\n        //this method use s function created in the favourite.serive.ts, return a boolean flag if the character is favourite \n        this.favouriteService.favouriteEp(this.epId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n\n    unfavouriteEp() {\n        this.favouriteService.unfavouriteEp(this.epId).then(() => {\n            this.isFavourite = false;\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"episode-details-episode-details-module-es5.js"}