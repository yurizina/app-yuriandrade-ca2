{"version":3,"sources":["./src/app/pages/episode-details/episode-details.page.html","./src/app/pages/episode-details/episode-details-routing.module.ts","./src/app/pages/episode-details/episode-details.module.ts","./src/app/pages/episode-details/episode-details.page.scss","./src/app/pages/episode-details/episode-details.page.ts"],"names":[],"mappings":"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","file":"episode-details-episode-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/episodes\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t\\n        <ion-title>Episode Details</ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteEp()\\\" *ngIf=\\\"isFavourite\\\">\\n            <!-- the ngIF check if the statement is true or not-->\\n            <!-- We have two buttons, one when is favorite and one when is not-->\\n\\t\\t\\t\\t<ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"favouriteEp()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n\\t<ion-card *ngIf=\\\"episode\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h2>Title: <b>{{ episode.title }}</b> </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Season: {{ episode.season }} </h2>\\n\\t\\t</ion-card-content>\\n\\n        <ion-card-content>\\n\\t\\t\\t<h2> Released: {{ episode.air_date }} </h2>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n    <ion-card *ngIf=\\\"episode\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<h3> Characters: {{ episode.characters }} </h3>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EpisodeDetailsPage } from './episode-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodeDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodeDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodeDetailsPageRoutingModule } from './episode-details-routing.module';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodeDetailsPageRoutingModule\n  ],\n  declarations: [EpisodeDetailsPage]\n})\nexport class EpisodeDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGUtZGV0YWlscy9lcGlzb2RlLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//Add the ActivatedRoute, where can be used further in our code to path/navigate \nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { FavouriteService } from './../../services/favourite.service';\n\n@Component({\n  selector: 'app-episode-details',\n  templateUrl: './episode-details.page.html',\n  styleUrls: ['./episode-details.page.scss'],\n})\nexport class EpisodeDetailsPage implements OnInit {\n \n    episode: any;\n    //Similar to Character details page.ts \n    epId = null; \n    //First of all we set the character ID, then we can use the constructor\n    isFavourite = false;  \n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { }\n\n    ngOnInit() {\n        //Here the function use the path from constructor to GET paraments pased in ID.\n        this.epId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        this.api.getEpisode(this.epId).subscribe(res => {\n             this.episode = res[0];\n             console.log(JSON.stringify(this.episode.episode_id));\n\n        });\n\n        this.favouriteService.isFav(this.epId).then(isFav => {\n            this.isFavourite = isFav;\n        });\n\n    }\n    favouriteEp() {\n        //this method use s function created in the favourite.serive.ts, return a boolean flag if the character is favourite \n        this.favouriteService.favouriteEp(this.epId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n\n    unfavouriteEp() {\n        this.favouriteService.unfavouriteEp(this.epId).then(() => {\n            this.isFavourite = false;\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}