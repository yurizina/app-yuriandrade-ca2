{"version":3,"sources":["src/app/pages/characters/characters.page.html","src/app/pages/characters/characters-routing.module.ts","src/app/pages/characters/characters.module.ts","src/app/pages/characters/characters.page.scss","src/app/pages/characters/characters.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- We can settle all primary code in html, but these buttons will not work-->\\n<!-- We need to go to characters.page.ts to implement the logic behind this code-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title class=\\\"ion-text-center\\\">Characters</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of chars\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t<!-- ngFor responsible for create multiple elements same type in array -->\\n\\t\\t\\t<!-- REMOVED -- async - we removed this because we are not using observe anymore-->\\n\\t\\t\\t<!-- ? - if varibable null dont crash -->\\n\\t\\t\\t<ion-avatar slot=\\\"start\\\">\\n\\t\\t\\t\\t<img src=\\\"{{ character.img }}\\\">\\n            </ion-avatar>\\n\\t\\t\\t\\t<!-- The tag avatar will display the image in a rounded icon-->\\n\\t\\t\\t\\t<ion-label>\\n\\t\\t\\t\\t\\t<p> {{ character.name }} </p>\\n\\t\\t\\t\\t</ion-label>\\n\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\n<!-- To apply the infinite scroll, we have to define few things-->\\n<!-- threshold - when the scroll will apply the loadMore, in my case, when is close to the end of the list 5% -->\\n<!-- loadMore is a method in the characters.page.ts to load more content while using scroll down -->\\n\\t<ion-infinite-scroll threshold=\\\"5%\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more characters\\\">\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersPageRoutingModule\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//We set the root direct using Router functionality\nimport { Observable } from 'rxjs';\n//The observable will be able to receive multiple return values from HTTP requests \nimport { ApiService } from '../../services/api.service';\n//import this will allow to make request to API from page Services\n\n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n    chars = [];\n    //Array of characters, will allow to create several pages to infinite scroll \n    offset = 0;\n    //Define the very first page of the pack of pages\n    maxChars = 64;\n    //Number maximum of characters + 1, defining the end of infinite scroll \n\n    constructor(private router: Router, private api: ApiService) { }\n    //What is a contructor? We use the constructor to storage services and classes \n    //We first used the Http request, but we defined a new pack of pages Services to host the url \n    //Once we define functions to call the right url request, we use the funtion here as ApiService \n\n    ngOnInit() {\n\n        this.loadCharacters();\n    }\n\n    loadCharacters(event?) {\n\n        //Now we will make connection when the method is called in the view!\n        //Will be able to get data from API with function getCharacters and show the first 20 characters defined in the url as limit\n        this.api.getCharacters(this.offset).subscribe(data => {\n\n            //this console shows the information in the console of the browser\n            //easy the track of data retrieved from API\n            console.log(\"my chararters info:\", data);\n\n            //we need to concacnate the information retrieved in many arrays\n            //Once the array created we can load a new page with the following array\n            this.chars = this.chars.concat(data);\n\n            //We will finish every the event of loading a page\n            //This allow to load the next page until it reaches the number max of pages\n            if (event) {\n                event.target.complete();\n            }\n        })\n    }\n\n    loadMore(event?) {\n        //We have to create a function to load more pages\n        //console.log(event);\n        //This offset++ will increase the number of pages every we need the function\n        this.offset = this.offset + 20;\n        //What to do with the loadMore function? Call the main function which have the data\n        this.loadCharacters(event);\n\n        //Once the number of pages have reached, the loadMore function stops\n        if (this.offset > this.maxChars) {\n            event.target.disabled = true;\n        }\n    }\n\n\n    openDetails(character) {\n\n        //these function was created in characters.page.html \n        //this will set the logic to call the function with correct router\n\n        //We create a variable to transform request data from API to our code here:\n        let charId = character.char_id;\n\n        this.router.navigateByUrl(`/tabs/characters/${charId}`);\n        //We could have one line of code like this one: \n        //this.router.navigateByUrl('/tabs/characters/${character.char_id}'); \n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"characters-characters-module-es5.js"}